class Solution {
    public int trap(int[] height) {
        int n=height.length;
        if(n<=2){
            return 0;
        }
        int maxLeft=height[0];
        int maxRight=height[n-1];
        int left=1;
        int right=n-2;
        int result=0;
        while(left<=right){
            if(maxLeft<maxRight){
            if(height[left]>maxLeft){
                maxLeft=height[left];
            }
            else{
                result=result+maxLeft-height[left];
                left+=1;
            }
            }
            else{
                if(maxRight<height[right]){
                    maxRight=height[right];
                }
                else{
                    result=result+maxRight-height[right];
                    right-=1;
                }
            }
        }
        return result;
    }
}
